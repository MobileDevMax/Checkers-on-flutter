import 'package:flutter/material.dart';

void main() {
  runApp(CheckersApp());
}

class CheckersApp extends StatelessWidget {
  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      title: 'Checkers',
      theme: ThemeData(
        primarySwatch: Colors.blue,
      ),
      home: CheckersBoard(),
    );
  }
}

class CheckersBoard extends StatefulWidget {
  @override
  _CheckersBoardState createState() => _CheckersBoardState();
}

class _CheckersBoardState extends State<CheckersBoard> {
  static const int boardSize = 8;
  List<List<int?>> board =
      List.generate(boardSize, (index) => List.filled(boardSize, null));
  int? selectedRow;
  int? selectedCol;

  @override
  void initState() {
    super.initState();
    _initializeBoard();
  }

  void _initializeBoard() {
    for (int row = 0; row < boardSize; row++) {
      for (int col = 0; col < boardSize; col++) {
        if ((row % 2 == 0 && col % 2 == 1) || (row % 2 == 1 && col % 2 == 0)) {
          if (row < 3) {
            board[row][col] = 1; 
          } else if (row > 4) {
            board[row][col] = 2; 
          }
        }
      }
    }
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: Text('Checkers'),
      ),
      body: Center(
        child: GridView.builder(
          gridDelegate: SliverGridDelegateWithFixedCrossAxisCount(
            crossAxisCount: boardSize,
          ),
          itemCount: boardSize * boardSize,
          itemBuilder: (context, index) {
            int row = index ~/ boardSize;
            int col = index % boardSize;
            return GestureDetector(
              onTap: () => _onTap(row, col),
              child: Container(
                width: 40,
                height: 40,
                color: (row + col) % 2 == 0
                    ? const Color.fromARGB(255, 250, 226, 15)
                    : Colors.brown,
                child: Center(
                  child: _buildChecker(row, col),
                ),
              ),
            );
          },
        ),
      ),
    );
  }

  Widget _buildChecker(int row, int col) {
    if (board[row][col] == 1) {
      return Container(
        width: 150,
        height: 150,
        decoration: BoxDecoration(
          color: Colors.black,
          shape: BoxShape.circle,
        ),
      );
    } else if (board[row][col] == 2) {
      return Container(
        width: 150,
        height: 150,
        decoration: BoxDecoration(
          color: Colors.white,
          shape: BoxShape.circle,
        ),
      );
    }
    return SizedBox.shrink(); 
  }

  void _onTap(int row, int col) {
    if (selectedRow == null && selectedCol == null) {
      if (board[row][col] != null) {
        setState(() {
          selectedRow = row;
          selectedCol = col;
        });
      }
    } else {
      if (_isValidMove(selectedRow!, selectedCol!, row, col)) {
        setState(() {
          board[row][col] =
              board[selectedRow!][selectedCol!]; 
          board[selectedRow!][selectedCol!] =
              null; 
          selectedRow = null; 
          selectedCol = null;
        });
      } else {
        setState(() {
          selectedRow = null;
          selectedCol = null;
        });
      }
    }
  }

  bool _isValidMove(int fromRow, int fromCol, int toRow, int toCol) {
    if (board[toRow][toCol] == null) {
      if ((toRow - fromRow).abs() == 1 && (toCol - fromCol).abs() == 1) {
        return true; 
      } else if ((toRow - fromRow).abs() == 2 && (toCol - fromCol).abs() == 2) {
        int middleRow = (fromRow + toRow) ~/ 2;
        int middleCol = (fromCol + toCol) ~/ 2;
        if (board[middleRow][middleCol] != null &&
            board[middleRow][middleCol] != board[fromRow][fromCol]) {
          return true; 
        }
      }
    }
    return false; 
  }
}
